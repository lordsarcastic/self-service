name: Add tags to SonarQube project
on:
  workflow_dispatch:
    inputs:
      tags:
        type: string
        required: true
      run_id:
        required: true
        type: string
      port_context:
        required: true
        type: string

jobs:
  create-entity-in-port-and-update-run:
    runs-on: ubuntu-latest
    steps:
      - name: Inform Port of start of request to SonarQube
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_context).run_id}}
          logMessage: Starting request to add tags to SonarQube project
      
      - name: Add tags to SonarQube project
        uses: fjogeleit/http-request-action@v1
        with:
          url: "${{ secrets.SONARQUBE_HOST_URL }}/api/project_tags/set?project=${{ fromJson(inputs.port_context).entity }}&tags=${{ inputs.tags }}"
          method: "POST"
          bearerToken: ${{ secrets.SONARQUBE_API_TOKEN }}
          customHeaders: '{"Content-Type": "application/json"}'

      - name: Inform Port of completion of request to SonarQube
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_context).run_id }}
          logMessage: Finished request to create SonarQube project