name: Change Jira Ticket Status and Assignee
on:
  workflow_dispatch:
    inputs:
      status:
        type: string
        required: false
      assignee:
        type: string
        required: false
      port_payload:
        required: true
        description:
          Port's payload, including details for who triggered the action and
          general context (blueprint, run id, etc...)
        type: string
    secrets:
      JIRA_BASE_URL:
        required: true
      JIRA_USER_EMAIL:
        required: true
      JIRA_API_TOKEN:
        required: true
      PORT_CLIENT_ID:
        required: true
      PORT_CLIENT_SECRET:
        required: true

jobs:
  change-jira-ticket-status-and-assignee:
    runs-on: ubuntu-latest
    outputs:
      selected_user_id: ${{ steps.user_list_from_search.outputs.selected_user_id }}
      selected_user_name: ${{ steps.user_list_from_search.outputs.selected_user_name }}

    steps:
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      - name: Inform starting of changing Jira ticket status
        id: inform_ticket_start
        if: ${{ github.event.inputs.status }}
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
            Changing status of Jira issue... ‚õ¥Ô∏è

      - name: Inform skipping of changing Jira ticket status
        id: inform_skip_ticket_status
        if: steps.inform_ticket_start.outcome == 'skipped'
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
            Status field is blank, skipping status change... ‚õ¥Ô∏è

      - name: Transition issue
        id: transition_issue_status
        if: steps.inform_ticket_start.outcome == 'success'
        uses: atlassian/gajira-transition@v3
        with:
          issue: ${{ fromJson(inputs.port_payload).context.entity }}
          transition: ${{ github.event.inputs.status }}

      - name: Inform that status has been changed
        if: steps.transition_issue_status.outcome == 'success'
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          link: ${{ secrets.JIRA_BASE_URL }}/browse/${{ fromJson(inputs.port_payload).context.entity }}
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
            Jira issue status changed to ${{ github.event.inputs.status }}! ‚úÖ

      - name: Inform starting of changing Jira ticket assignee
        id: inform_assignee_start
        if: ${{ github.event.inputs.assignee }}
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
            Assigning ticket to user... ‚õ¥Ô∏è

      - name: Inform skipping of changing Jira ticket assignee
        id: inform_skip_assignee
        if: steps.inform_assignee_start.outcome == 'skipped'
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
            Assignee field is blank, skipping assigning of ticket... ‚õ¥Ô∏è

      - name: Inform searching of user in user list
        if: steps.inform_skip_assignee.outcome == 'skipped'
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
            Searching for user in organization user list... ‚õ¥Ô∏è

      - name: Search for assignee among user list
        id: search_for_assignee
        if: steps.inform_skip_assignee.outcome == 'skipped'
        uses: fjogeleit/http-request-action@v1
        with:
          url: "${{ secrets.JIRA_BASE_URL }}/rest/api/3/user/search?query=${{ github.event.inputs.assignee }}"
          method: "GET"
          username: ${{ secrets.JIRA_USER_EMAIL }}
          password: ${{ secrets.JIRA_API_TOKEN }}
          customHeaders: '{"Content-Type": "application/json"}'

      - name: Install jq
        run: sudo apt-get install jq
        if: steps.search_for_assignee.outcome == 'success'

      - name: Retrieve user list from search
        id: user_list_from_search
        if: steps.search_for_assignee.outcome == 'success'
        run: |
          selected_user_id=$(echo '${{ steps.search_for_assignee.outputs.response }}' | jq -r 'if length > 0 then .[0].accountId else "empty" end')
          selected_user_name=$(echo '${{ steps.search_for_assignee.outputs.response }}' | jq -r 'if length > 0 then .[0].displayName else "empty" end')
          echo "selected_user_id=${selected_user_id}" >> $GITHUB_OUTPUT
          echo "selected_user_name=${selected_user_name}" >> $GITHUB_OUTPUT

      - name: Inform user existence
        if: steps.user_list_from_search.outputs.selected_user_id != 'empty'
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
            User found ü•π Assigning ticket ${{ fromJson(inputs.port_payload).context.entity }} to ${{ steps.user_list_from_search.outputs.selected_user_name }}... ‚õ¥Ô∏è

      - name: Inform user inexistence
        if: steps.user_list_from_search.outputs.selected_user_id == 'empty'
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
            User not found üò≠ Skipping assignment... ‚õ¥Ô∏è

      - name: Assign ticket to selected user
        id: assign_ticket
        if: steps.user_list_from_search.outputs.selected_user_id != 'empty'
        uses: fjogeleit/http-request-action@v1
        with:
          url: "${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/${{ fromJson(inputs.port_payload).context.entity }}/assignee"
          method: "PUT"
          username: ${{ secrets.JIRA_USER_EMAIL }}
          password: ${{ secrets.JIRA_API_TOKEN }}
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"accountId": "${{ steps.user_list_from_search.outputs.selected_user_id }}"}'

      - name: Inform ticket has been assigned
        if: steps.assign_ticket.outcome == 'success'
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          link: ${{ secrets.JIRA_BASE_URL }}/browse/${{ fromJson(inputs.port_payload).context.entity }}
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
            Jira issue has been assigned to ${{ steps.user_list_from_search.outputs.selected_user_name }}! ‚úÖ
