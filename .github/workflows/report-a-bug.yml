## This Workflow creates a basic jira bug and updates in Port
## Remove comments and edit for more fields as part of the jira bug

name: Report a bug in jira

on:
  workflow_dispatch:
    inputs:
      description:
        required: true
        type: string
      short_title:
        required: true
        type: string
      port_payload:
        required: true
        type: string

jobs:
  create_jira_issue:
    runs-on: ubuntu-latest
    steps:
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
      
      - name: Inform searching of user in user list
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
            Searching for user in organization user list... ‚õ¥Ô∏è

      - name: Search for assignee among user list
        id: search_for_assignee
        uses: fjogeleit/http-request-action@v1
        with:
          url: "${{ secrets.JIRA_BASE_URL }}/rest/api/3/user/search?query=${{ github.event.inputs.assignee }}"
          method: "GET"
          username: ${{ secrets.JIRA_USER_EMAIL }}
          password: ${{ secrets.JIRA_API_TOKEN }}
          customHeaders: '{"Content-Type": "application/json"}'
      
      - name: Install jq
        run: sudo apt-get install jq
        if: steps.search_for_assignee.outcome == 'success'

      - name: Retrieve user list from search
        id: user_list_from_search
        if: steps.search_for_assignee.outcome == 'success'
        run: |
          selected_user_id=$(echo '${{ steps.search_for_assignee.outputs.response }}' | jq -r 'if length > 0 then .[0].accountId else "empty" end')
          selected_user_name=$(echo '${{ steps.search_for_assignee.outputs.response }}' | jq -r 'if length > 0 then .[0].displayName else "empty" end')
          echo "selected_user_id=${selected_user_id}" >> $GITHUB_OUTPUT
          echo "selected_user_name=${selected_user_name}" >> $GITHUB_OUTPUT

      - name: Inform user existence
        if: steps.user_list_from_search.outputs.selected_user_id != 'empty'
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
            User found ü•π Will assign Bug to ${{ steps.user_list_from_search.outputs.selected_user_name }}... ‚õ¥Ô∏è

      - name: Inform user inexistence
        if: steps.user_list_from_search.outputs.selected_user_id == 'empty'
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
            User not found üò≠ Bug will be created without assignee ‚õ¥Ô∏è

      - name: Inform starting of jira issue creation
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
            Creating a new Jira issue.. ‚õ¥Ô∏è

      - name: Create Jira issue
        id: create
        uses: atlassian/gajira-create@v3
        with:
          project: PORT
          issuetype: Bug
          summary: Bug | ${{github.event.inputs.short_title}}
          fields: ${{ steps.user_list_from_search.outputs.selected_user_id == 'empty' && {} || '{"assignee": {"id": "${{ steps.user_list_from_search.outputs.selected_user_id }}"}}' }}
          description: |
            ${{github.event.inputs.description}}

      - name: Inform creation of Jira issue
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_AUTH_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_AUTH_CLIENT_SECRET }}
          operation: PATCH_RUN
          link: https://getport.atlassian.net/browse/${{ steps.create.outputs.issue }}
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
            Jira issue created! ‚úÖ
            The issue id is: ${{ steps.create.outputs.issue }}